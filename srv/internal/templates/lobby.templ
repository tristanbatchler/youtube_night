package templates

import (
	"fmt"
	"github.com/tristanbatchler/youtube_night/srv/internal/db"
	"github.com/tristanbatchler/youtube_night/srv/internal/stores"
	"google.golang.org/api/youtube/v3"
)

templ searchResult(result *youtube.SearchResult) {
	if result.Snippet != nil && result.Snippet.Thumbnails != nil && (result.Snippet.Thumbnails.Default != nil || result.Snippet.Thumbnails.Maxres != nil) {
		{{ video := db.Video{VideoID: result.Id.VideoId, Title: result.Snippet.Title, Description: result.Snippet.Description, ThumbnailUrl: result.Snippet.Thumbnails.Default.Url, ChannelName: result.Snippet.ChannelTitle} }}
		if result.Snippet.Thumbnails.Maxres != nil {
			{{ video.ThumbnailUrl = result.Snippet.Thumbnails.Maxres.Url }}
		}
		<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300">
			<div class="flex flex-col sm:flex-row w-full">
				<!-- Thumbnail - Full width on mobile, fixed width on larger screens -->
				<div class="w-full sm:w-40 sm:flex-shrink-0">
					<img
						src={ video.ThumbnailUrl }
						alt="Video Thumbnail"
						class="w-full h-40 sm:h-full object-cover"
					/>
				</div>
				<!-- Content area with better spacing -->
				<div class="flex flex-col justify-between flex-1 p-4 min-w-0">
					<!-- Title and description with proper truncation -->
					<div class="mb-4">
						if result.Snippet != nil {
							<h4 class="font-medium text-gray-900 dark:text-white line-clamp-1 break-words">{ video.Title }</h4>
							<p class="text-sm text-gray-600 dark:text-gray-400 mt-1 line-clamp-1 break-words">
								{ result.Snippet.ChannelTitle }
							</p>
							<p class="text-sm text-gray-600 dark:text-gray-400 mt-1 line-clamp-2 break-words">{ video.Description }</p>
						}
					</div>
					<!-- Button with form instead of query params -->
					<div class="flex justify-end">
						<form
							hx-post="/videos/submit"
							hx-target="#videos-container"
							hx-swap="none"
						>
							<input type="hidden" name="videoId" value={ video.VideoID }/>
							<input type="hidden" name="title" value={ video.Title }/>
							<input type="hidden" name="channelName" value={ result.Snippet.ChannelTitle }/>
							<input type="hidden" name="description" value={ video.Description }/>
							<input type="hidden" name="thumbnailUrl" value={ video.ThumbnailUrl }/>
							<button
								type="submit"
								class="inline-flex items-center px-3 py-1.5 bg-indigo-600 text-white text-sm font-medium rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition"
							>
								‚ûï
								Suggest
							</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	}
}

templ VideoSearchResults(results []*youtube.SearchResult) {
	<div id="video-search-results" class="space-y-3 mt-4">
		if len(results) > 0 {
			for _, result := range results {
				@searchResult(result)
			}
		} else {
			<div class="bg-gray-100 dark:bg-gray-700 rounded-lg p-6 text-center">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
				</svg>
				<p class="mt-2 text-gray-600 dark:text-gray-400">No videos found. Try a different search term.</p>
			</div>
		}
	</div>
}

templ videoSearchForm() {
	<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5">
		<h3 class="text-lg font-medium text-gray-900 dark:text-white">Suggest a Video</h3>
		<p class="text-sm text-gray-600 dark:text-gray-400 mt-1">
			Find videos to suggest for your gang to watch together!
		</p>
		<div class="mt-4">
			<form
				hx-get="/videos/search"
				hx-target="#video-search-results"
				hx-swap="outerHTML"
				hx-indicator="#search-indicator"
			>
				<div class="flex">
					<div class="relative flex-grow">
						<div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
							</svg>
						</div>
						<input
							type="text"
							name="q"
							placeholder="Search YouTube videos..."
							required
							class="block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-l-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
							hx-trigger="keyup changed delay:500ms, search"
							hx-target="#video-search-results"
							hx-get="/videos/search"
						/>
					</div>
					<button
						type="submit"
						class="inline-flex items-center px-4 py-2 border border-transparent rounded-r-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
					>
						Search
					</button>
				</div>
			</form>
			@searchIndicator()
		</div>
		<div id="video-search-results" class="space-y-3 mt-4"></div>
	</div>
}

templ VideoToAppend(video db.Video) {
	<li hx-swap-oob="afterbegin:#videos-list">
		@videoCard(video)
	</li>
	<div id="no-videos-message" hx-swap-oob="delete"></div>
}

templ RemoveVideoResponse(videoId string, videos []db.Video) {
	<div id={ fmt.Sprintf("video-%s", videoId) } hx-swap-oob="delete"></div>
	if len(videos) > 0 {
		<span id="videos-count-badge" hx-swap-oob="outerHTML">
			@videoCountBadge(len(videos))
		</span>
	} else {
		<span id="videos-count-badge" hx-swap-oob="delete"></span>
		<div id="no-videos-message" class="text-gray-600 dark:text-gray-400" hx-swap-oob="afterbegin:#videos-container">
			<p>You haven't suggested any videos yet. Use the search box to find and suggest videos!</p>
		</div>
	}
}

templ SubmitVideoResponse(video db.Video, totalCount int) {
	<li hx-swap-oob="afterbegin:#videos-list">
		@videoCard(video)
	</li>
	<div id="no-videos-message" hx-swap-oob="delete"></div>
	<span id="videos-count-badge" hx-swap-oob="outerHTML">
		@videoCountBadge(totalCount)
	</span>
}

templ lobbyContents(videos []db.Video, sessionData *stores.SessionData) {
	<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
		@dashboardHeader(sessionData)
		<div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
			<!-- Main Content - Left/Top Section -->
			<div class="lg:col-span-2 space-y-6">
				<!-- Gang Info Card -->
				<div class="bg-gradient-to-br from-indigo-600 to-purple-600 rounded-lg shadow-lg text-white p-6">
					<div class="flex items-center mb-4 space-x-3 text-2xl">
						üë™
						<h2 class="font-bold">{ sessionData.GangName }</h2>
					</div>
					<div class="bg-opacity-20 rounded-lg p-4">
						<div class="flex items-center">
							<div class="mr-4 text-4xl">
								‚åö
							</div>
							<div>
								<h3 class="font-medium">Game status</h3>
								<div class="flex items-center">
									<p id="game-status" class="text-lg mr-3">
										Waiting for host to start...
									</p>
									<span id="game-status-indicator" class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100">
										Waiting
									</span>
								</div>
							</div>
						</div>
						if sessionData.IsHost {
							<div class="mt-4">
								<button
									id="start-game-btn"
									class="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md shadow transition-colors"
									hx-post="/game/start"
									hx-swap="none"
								>
									Start Game
								</button>
								<p class="text-xs mt-1 text-white text-opacity-80">
									As host, you can start the game when everyone has submitted their videos.
								</p>
							</div>
						}
					</div>
				</div>
				<!-- My Submissions Section -->
				<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5">
					<div class="flex items-center justify-between mb-4">
						<h2 class="text-xl font-semibold text-gray-900 dark:text-white">My submissions</h2>
						if len(videos) > 0 {
							@videoCountBadge(len(videos))
						}
					</div>
					@videosList(videos)
				</div>
			</div>
			<!-- Sidebar - Right/Bottom Section -->
			<div class="space-y-6">
				<!-- Video Search Section -->
				@videoSearchForm()
				<!-- Help Card -->
				<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5">
					<h3 class="flex items-center text-lg font-medium text-gray-900 dark:text-white">
						‚ÑπÔ∏è How It Works
					</h3>
					<div class="mt-3 space-y-3 text-sm text-gray-600 dark:text-gray-400">
						<p>
							<span class="font-medium text-gray-900 dark:text-white">1.</span> Anonymously suggest videos for the gang to watch using the search box.
						</p>
						<p>
							<span class="font-medium text-gray-900 dark:text-white">2.</span> Wait for the host to start the game, revealing the videos everyone submitted.
						</p>
						<p>
							<span class="font-medium text-gray-900 dark:text-white">3.</span> Watch each video and guess who submitted it.
						</p>
						<p>
							<span class="font-medium text-gray-900 dark:text-white">4.</span> The host will reveal the correct answers and award points based on guesses.
						</p>
					</div>
				</div>
				<!-- Wait for other players -->
				<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5">
					<h3 class="flex items-center text-lg font-medium text-gray-900 dark:text-white">
						‚ûï
						Invite Friends
					</h3>
					<p class="mt-2 text-sm text-gray-600 dark:text-gray-400">
						Share this gang code with your friends so they can join:
					</p>
					<div class="mt-3 bg-gray-100 dark:bg-gray-700 p-3 rounded-md">
						<div class="flex items-center justify-between">
							<code class="font-mono text-lg font-semibold">{ fmt.Sprintf("%s", sessionData.GangName) }</code>
							<button
								class="text-indigo-600 hover:text-indigo-800"
								title="Copy to clipboard"
								onclick="navigator.clipboard.writeText(this.getAttribute('data-code')); this.innerHTML = 'Copied!';"
								data-code={ sessionData.GangName }
							>
								<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
								</svg>
							</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ Lobby(videos []db.Video, sessionData *stores.SessionData) {
	@MainContent(lobbyContents(videos, sessionData))
}
